# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python_test

on:
  push:
    branches: [ master, dev/github_actions ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
          python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics
    - name: Build Wheel
      run: |
        ./run_manylinux_build.sh
        echo "====="
    - name: Install Wheel
      run: |
        ls -al
        ls -al wheelhouse
        MB_PYTHON_TAG=$(python -c "import setup; print(setup.MB_PYTHON_TAG)") 
        VERSION=$(python -c "import setup; print(setup.VERSION)") 
        echo "MB_PYTHON_TAG = $MB_PYTHON_TAG"
        echo "VERSION = $VERSION"
        BDIST_WHEEL_PATH=$(ls wheelhouse/*-${VERSION}-${MB_PYTHON_TAG}-*2010_x86_64.whl)
        echo "BDIST_WHEEL_PATH = $BDIST_WHEEL_PATH"
        python -m pip install $BDIST_WHEEL_PATH[all]
    - name: Test Wheel
      run: |
        python run_tests.py
    - name: Codecov Upload
      uses: codecov/codecov-action@v1
      with:
        file: ./tests/coverage.xml
    
#__doc__: |
#    # How to run locally
#    # https://packaging.python.org/guides/using-testpypi/
#    cd $HOME/code
#    git clone https://github.com/nektos/act.git $HOME/code/act
#    cd $HOME/code/act
#    chmod +x install.sh
#    ./install.sh -b $HOME/.local/opt/act
#    cd $HOME/code/line_profiler

#    load_secrets
#    unset GITHUB_TOKEN
#    $HOME/.local/opt/act/act \
#        --secret=PYUTILS_TWINE_PASSWORD=$PYUTILS_TWINE_PASSWORD \
#        --secret=PYUTILS_TWINE_USERNAME=$PYUTILS_TWINE_USERNAME \
#        --secret=PYUTILS_CI_GITHUB_SECRET=$PYUTILS_CI_GITHUB_SECRET \
#        --secret=PYUTILS_TEST_TWINE_USERNAME=$PYUTILS_TEST_TWINE_USERNAME \
#        --secret=PYUTILS_TEST_TWINE_PASSWORD=$PYUTILS_TEST_TWINE_PASSWORD 
